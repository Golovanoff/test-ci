#Использовать asserts
#Использовать ".."

Функция ПолучитьСписокТестов(Тестирование) Экспорт
	
	СписокТестов = Новый Массив;
	СписокТестов.Добавить("НетДонора");
	СписокТестов.Добавить("ДолженОбработатьКоммиты");
	СписокТестов.Добавить("ДолженПерейтиНаУказанныйШаг");

	Возврат СписокТестов;
КонецФункции

Процедура ПередЗапускомТеста()  Экспорт
КонецПроцедуры

Процедура ПослеЗапускаТеста()  Экспорт
КонецПроцедуры

Процедура НетДонора()  Экспорт
	
	КомандаRun = Новый КомандаRun();

	НастройкиКоманды = ТестовыеНастройки();
	НастройкиКоманды.Донор.Путь = ПолучитьИмяВременногоФайла();

	НашРепо = Новый ГитРепозиторий();

	Попытка
		КомандаRun.ВыполнитьПоНастройкам(НашРепо, НастройкиКоманды);
		ВызватьИсключение "Должен был произойти вызов исключения!";
	Исключение
		Ожидаем.Что(ОписаниеОшибки(), "При отсутвии репо донора должно быть исключение")
					.Содержит("Не найден путь (или это не каталог) к репо-донору");
	КонецПопытки;

	УдалитьФайлы(НастройкиКоманды.Донор.Путь);
КонецПроцедуры

Процедура ДолженОбработатьКоммиты()  Экспорт
	
	КаталогДонора = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(КаталогДонора);

	НастройкиInit = Новый Структура();
	НастройкиInit.Вставить("URLДонора", "http://github.com/Golovanoff/test-ci.git");
	НастройкиInit.Вставить("ПутьКДонору", КаталогДонора);
	НастройкиInit.Вставить("СохранитьJSON", Ложь);

	КомандаInit = Новый КомандаInit();
	КомандаInit.ВыполнитьПоНастройкам(НастройкиInit);

	КаталогНашегоРепо = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(КаталогНашегоРепо);

	НашРепо = Новый ГитРепозиторий();
	НашРепо.УстановитьРабочийКаталог(КаталогНашегоРепо);
	НашРепо.Инициализировать();

	НастройкиRun = ТестовыеНастройки();
	НастройкиRun.Донор.Путь = НастройкиInit.ПутьКДонору;
	НастройкиRun.Вставить("Пушить", Ложь);

	КомандаRun = Новый КомандаRun();
	КомандаRun.ВыполнитьПоНастройкам(НашРепо, НастройкиRun);

	НашРепо.ВывестиИсторию();
	ЛогРепо = НашРепо.ПолучитьВыводКоманды();
	
	Ожидаем.Что(ЛогРепо, "В репо появился 1й тестовый коммит").Содержит("тесты для Init");
	Ожидаем.Что(ЛогРепо, "В репо появился 2й тестовый коммит").Содержит("косметика");
	Ожидаем.Что(ЛогРепо, "В репо появился 3й тестовый коммит").Содержит("заготовка под тесты");

	УдалитьФайлы(КаталогДонора);
	УдалитьФайлы(КаталогНашегоРепо);
КонецПроцедуры

Процедура ДолженПерейтиНаУказанныйШаг()  Экспорт
	
	КаталогДонора = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(КаталогДонора);

	НастройкиInit = Новый Структура();
	НастройкиInit.Вставить("URLДонора", "http://github.com/Golovanoff/test-ci.git");
	НастройкиInit.Вставить("ПутьКДонору", КаталогДонора);
	НастройкиInit.Вставить("СохранитьJSON", Ложь);

	КомандаInit = Новый КомандаInit();
	КомандаInit.ВыполнитьПоНастройкам(НастройкиInit);

	КаталогНашегоРепо = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(КаталогНашегоРепо);

	НашРепо = Новый ГитРепозиторий();
	НашРепо.УстановитьРабочийКаталог(КаталогНашегоРепо);
	НашРепо.Инициализировать();

	НастройкиRun = ТестовыеНастройки();
	НастройкиRun.Донор.Путь = НастройкиInit.ПутьКДонору;
	НастройкиRun.Вставить("Пушить", Ложь);
	НастройкиRun.Вставить("УказанШаг", "S2");

	КомандаRun = Новый КомандаRun();
	КомандаRun.ВыполнитьПоНастройкам(НашРепо, НастройкиRun);

	НашРепо.ВывестиИсторию();
	ЛогРепо = НашРепо.ПолучитьВыводКоманды();
	
	Ожидаем.Что(ЛогРепо, "В репо не появился 1й тестовый коммит").Не_().Содержит("тесты для Init");
	Ожидаем.Что(ЛогРепо, "В репо появился 2й тестовый коммит").Содержит("косметика");
	Ожидаем.Что(ЛогРепо, "В репо не появился 3й тестовый коммит").Не_().Содержит("заготовка под тесты");

	УдалитьФайлы(КаталогДонора);
	УдалитьФайлы(КаталогНашегоРепо);
КонецПроцедуры

Функция ТестовыеНастройки()
	
	Донор = Новый Структура();
	Донор.Вставить("Адрес", "http://github.com/Golovanoff/test-ci.git");
	Донор.Вставить("Путь", "");

	Коммиты = Новый Структура();
	Коммиты.Вставить("S1", "95b48fc");
	Коммиты.Вставить("S2", "ea66ec5");
	Коммиты.Вставить("S3", "fa3706f");

	Настройки = Новый Структура();
	Настройки.Вставить("Донор", Донор);
	Настройки.Вставить("Файлы", СтрРазделить("src,test-ci.os", ","));
	Настройки.Вставить("Коммиты", Коммиты);

	Возврат Настройки;
КонецФункции
